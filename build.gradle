import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")
        classpath('com.bmuschko:gradle-docker-plugin:3.0.8')
    }
}

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-remote-api'

bootJar {
    baseName = 'java-restful-test'
    version =  '0.1.0'
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task createDockerImage(type: DockerBuildImage) {
    inputDir = file('.')
    tags = ['carlospatinos/java_restful_test']
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-devtools")
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("com.google.guava:guava:24.1-jre")
    compile("org.gavaghan:geodesy:1.1.3")
    compile("org.apache.commons:commons-lang3:3.7")
    compile("org.springframework.boot:spring-boot-starter-security")
    //compile("de.flapdoodle.embed:de.flapdoodle.embed.mongo")
    //testCompile("cz.jirutka.spring:embedmongo-spring:RELEASE")
    testCompile("org.springframework.security:spring-security-test")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.jayway.jsonpath:json-path')
}

test.doLast { 
    println 'Testing the build from gradle'
    createDockerImage 
}